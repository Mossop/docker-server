#! /bin/sh

TARGET=/usr/src/$1

run() {
  echo $@
  $@
}

set -e

apk add --no-cache --virtual .strip-build binutils

# Strip docs
echo "Stripping docs" > /dev/stderr
for i in doc man info html sgml licenses gtk-doc ri help; do
  if [ -d "$TARGET/usr/local/share/$i" ]; then
    run rm -rf "$TARGET/usr/local/share/$i"
  fi
done

# Strip dev
echo "Stripping development files" > /dev/stderr
for i in \
  $TARGET/usr/local/include \
  $TARGET/usr/local/lib/pkgconfig \
  $TARGET/usr/local/share/aclocal \
  $TARGET/usr/local/share/gettext \
  $TARGET/usr/local/bin/*-config \
  $TARGET/usr/local/share/vala/vapi \
  $TARGET/usr/local/share/gir-[0-9]* \
  $TARGET/usr/local/share/qt*/mkspecs \
  $TARGET/usr/local/lib/qt*/mkspecs \
  $TARGET/usr/local/lib/cmake \
  $(find $TARGET/usr/local -name include -type d) \
  $(find $TARGET/usr/local -name '*.[acho]' -o -name '*.prl' 2>/dev/null); do
    if [ -e "$i" ] || [ -L "$i" ]; then
      run rm -rf $i
    fi
done

# Strip binaries
echo "Stripping binaries" > /dev/stderr
scanelf --recursive --nobanner --osabi --etype "ET_DYN,ET_EXEC" $TARGET \
  | while read type osabi filename; do
    # scanelf may have picked up a temp file so verify that file still exists
    [ -e "$filename" ] || continue
    [ "$osabi" != "STANDALONE" ] || continue
    run strip "${filename}"
done

# Remove libtool info
echo "Removing libtool info" > /dev/stderr
find $TARGET -name '*.la' | xargs rm -f

apk del --no-network .strip-build
